{"ast":null,"code":"var _jsxFileName = \"/Users/clemzouuu/Desktop/ESGI/ARCHI_1/PROJET_ANNUEL/UFC-QUE-CHOISIR/ufc/front_end/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport SurveyCreator from './components/SurveyCreator';\nimport SurveyList from './components/SurveyList';\nimport SurveyResponse from './components/SurveyResponse';\nimport SurveyResults from './components/SurveyResults';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [surveys, setSurveys] = useState([]);\n  const [responses, setResponses] = useState([]);\n  const addSurvey = survey => {\n    setSurveys([...surveys, survey]);\n  };\n  const handleResponseSubmit = (surveyIndex, response) => {\n    const newResponses = [...responses];\n    newResponses[surveyIndex] = newResponses[surveyIndex] || [];\n    newResponses[surveyIndex].push(response);\n    setResponses(newResponses);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(SurveyCreator, {\n      onAddSurvey: addSurvey\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SurveyList, {\n      surveys: surveys\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), surveys.map((survey, index) => /*#__PURE__*/_jsxDEV(SurveyResponse, {\n      survey: survey,\n      onSubmit: response => handleResponseSubmit(index, response)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)), surveys.map((survey, index) => /*#__PURE__*/_jsxDEV(SurveyResults, {\n      survey: survey,\n      responses: responses[index] || []\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"cgLU0/BKL1n4c33okqL/SN8Nktk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","SurveyCreator","SurveyList","SurveyResponse","SurveyResults","jsxDEV","_jsxDEV","App","_s","surveys","setSurveys","responses","setResponses","addSurvey","survey","handleResponseSubmit","surveyIndex","response","newResponses","push","children","onAddSurvey","fileName","_jsxFileName","lineNumber","columnNumber","map","index","onSubmit","_c","$RefreshReg$"],"sources":["/Users/clemzouuu/Desktop/ESGI/ARCHI_1/PROJET_ANNUEL/UFC-QUE-CHOISIR/ufc/front_end/src/App.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport SurveyCreator from './components/SurveyCreator';\nimport SurveyList from './components/SurveyList';\nimport SurveyResponse from './components/SurveyResponse';\nimport SurveyResults from './components/SurveyResults';\n\ninterface Question {\n  questionText: string;\n  options: string[];\n}\n\ninterface Survey {\n  title: string;\n  questions: Question[];\n}\n\nconst App: React.FC = () => {\n  const [surveys, setSurveys] = useState<Survey[]>([]);\n  const [responses, setResponses] = useState<string[][]>([]);\n\n  const addSurvey = (survey: Survey) => {\n    setSurveys([...surveys, survey]);\n  };\n\n  const handleResponseSubmit = (surveyIndex: number, response: string[]) => {\n    const newResponses = [...responses];\n    newResponses[surveyIndex] = newResponses[surveyIndex] || [];\n    newResponses[surveyIndex].push(response);\n    setResponses(newResponses);\n  };\n\n  return (\n    <div>\n      <SurveyCreator onAddSurvey={addSurvey} />\n      <SurveyList surveys={surveys} />\n      {surveys.map((survey, index) => (\n        <SurveyResponse\n          key={index}\n          survey={survey}\n          onSubmit={(response) => handleResponseSubmit(index, response)}\n        />\n      ))}\n      {surveys.map((survey, index) => (\n        <SurveyResults key={index} survey={survey} responses={responses[index] || []} />\n      ))}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,aAAa,MAAM,4BAA4B;AACtD,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,cAAc,MAAM,6BAA6B;AACxD,OAAOC,aAAa,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAYvD,MAAMC,GAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAW,EAAE,CAAC;EACpD,MAAM,CAACW,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAa,EAAE,CAAC;EAE1D,MAAMa,SAAS,GAAIC,MAAc,IAAK;IACpCJ,UAAU,CAAC,CAAC,GAAGD,OAAO,EAAEK,MAAM,CAAC,CAAC;EAClC,CAAC;EAED,MAAMC,oBAAoB,GAAGA,CAACC,WAAmB,EAAEC,QAAkB,KAAK;IACxE,MAAMC,YAAY,GAAG,CAAC,GAAGP,SAAS,CAAC;IACnCO,YAAY,CAACF,WAAW,CAAC,GAAGE,YAAY,CAACF,WAAW,CAAC,IAAI,EAAE;IAC3DE,YAAY,CAACF,WAAW,CAAC,CAACG,IAAI,CAACF,QAAQ,CAAC;IACxCL,YAAY,CAACM,YAAY,CAAC;EAC5B,CAAC;EAED,oBACEZ,OAAA;IAAAc,QAAA,gBACEd,OAAA,CAACL,aAAa;MAACoB,WAAW,EAAER;IAAU;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACzCnB,OAAA,CAACJ,UAAU;MAACO,OAAO,EAAEA;IAAQ;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAC/BhB,OAAO,CAACiB,GAAG,CAAC,CAACZ,MAAM,EAAEa,KAAK,kBACzBrB,OAAA,CAACH,cAAc;MAEbW,MAAM,EAAEA,MAAO;MACfc,QAAQ,EAAGX,QAAQ,IAAKF,oBAAoB,CAACY,KAAK,EAAEV,QAAQ;IAAE,GAFzDU,KAAK;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGX,CACF,CAAC,EACDhB,OAAO,CAACiB,GAAG,CAAC,CAACZ,MAAM,EAAEa,KAAK,kBACzBrB,OAAA,CAACF,aAAa;MAAaU,MAAM,EAAEA,MAAO;MAACH,SAAS,EAAEA,SAAS,CAACgB,KAAK,CAAC,IAAI;IAAG,GAAzDA,KAAK;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAsD,CAChF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACjB,EAAA,CA/BID,GAAa;AAAAsB,EAAA,GAAbtB,GAAa;AAiCnB,eAAeA,GAAG;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}