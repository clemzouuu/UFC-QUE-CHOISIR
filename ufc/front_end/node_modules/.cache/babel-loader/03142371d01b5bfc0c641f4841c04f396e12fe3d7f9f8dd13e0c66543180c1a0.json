{"ast":null,"code":"var _jsxFileName = \"/Users/clemzouuu/Desktop/ESGI/ARCHI_1/PROJET_ANNUEL/UFC-QUE-CHOISIR/ufc/front_end/src/components/SurveyCreator.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SurveyCreator = ({\n  onAddSurvey\n}) => {\n  _s();\n  const [surveyTitle, setSurveyTitle] = useState('');\n  const [questions, setQuestions] = useState([{\n    questionText: '',\n    type: 'radio',\n    options: ['']\n  }]);\n  const [error, setError] = useState(null);\n  const handleTitleChange = e => {\n    setSurveyTitle(e.target.value);\n  };\n  const handleQuestionChange = (index, value) => {\n    const newQuestions = [...questions];\n    newQuestions[index].questionText = value;\n    setQuestions(newQuestions);\n  };\n  const handleOptionChange = (qIndex, oIndex, value) => {\n    const newQuestions = [...questions];\n    newQuestions[qIndex].options[oIndex] = value;\n    setQuestions(newQuestions);\n  };\n  const handleQuestionTypeChange = (index, type) => {\n    const newQuestions = [...questions];\n    newQuestions[index].type = type;\n    if (type === 'text') {\n      delete newQuestions[index].options;\n    } else {\n      newQuestions[index].options = [''];\n    }\n    setQuestions(newQuestions);\n  };\n  const addQuestion = () => {\n    setQuestions([...questions, {\n      questionText: '',\n      type: 'radio',\n      options: ['']\n    }]);\n  };\n  const addOption = qIndex => {\n    const newQuestions = [...questions];\n    newQuestions[qIndex].options.push('');\n    setQuestions(newQuestions);\n  };\n  const handleSubmit = async () => {\n    if (!surveyTitle.trim()) {\n      setError('Le titre du sondage ne peut pas être vide.');\n      return;\n    }\n    for (const question of questions) {\n      if (!question.questionText.trim()) {\n        setError('Toutes les questions doivent avoir un texte.');\n        return;\n      }\n      if (question.type === 'radio') {\n        for (const option of question.options) {\n          if (!option.trim()) {\n            setError('Toutes les options doivent avoir un texte.');\n            return;\n          }\n        }\n      }\n    }\n    setError(null);\n    const survey = {\n      title: surveyTitle,\n      questions\n    };\n    onAddSurvey(survey);\n    try {\n      const response = await axios.post('http://localhost:3000/surveys', survey, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      console.log('Survey created:', response.data);\n    } catch (error) {\n      console.error('Error creating survey:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Cr\\xE9er un sondage\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: surveyTitle,\n      onChange: handleTitleChange,\n      placeholder: \"Titre du sondage\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), questions.map((question, qIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: question.questionText,\n        onChange: e => handleQuestionChange(qIndex, e.target.value),\n        placeholder: `Question ${qIndex + 1}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          checked: question.type === 'radio',\n          onChange: () => handleQuestionTypeChange(qIndex, 'radio')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this), \"Radio\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          checked: question.type === 'text',\n          onChange: () => handleQuestionTypeChange(qIndex, 'text')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this), \"Texte\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this), question.type === 'radio' && question.options.map((option, oIndex) => /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: option,\n        onChange: e => handleOptionChange(qIndex, oIndex, e.target.value),\n        placeholder: `Option ${oIndex + 1}`\n      }, oIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }, this)), question.type === 'radio' && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => addOption(qIndex),\n        children: \"Ajouter une option\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 41\n      }, this)]\n    }, qIndex, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addQuestion,\n      children: \"Ajouter une question\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      children: \"Soumettre le sondage\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n};\n_s(SurveyCreator, \"/U+HPvvLv4cICE0hKSXMzSFbePM=\");\n_c = SurveyCreator;\nexport default SurveyCreator;\nvar _c;\n$RefreshReg$(_c, \"SurveyCreator\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","SurveyCreator","onAddSurvey","_s","surveyTitle","setSurveyTitle","questions","setQuestions","questionText","type","options","error","setError","handleTitleChange","e","target","value","handleQuestionChange","index","newQuestions","handleOptionChange","qIndex","oIndex","handleQuestionTypeChange","addQuestion","addOption","push","handleSubmit","trim","question","option","survey","title","response","post","headers","console","log","data","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","onChange","placeholder","map","checked","onClick","_c","$RefreshReg$"],"sources":["/Users/clemzouuu/Desktop/ESGI/ARCHI_1/PROJET_ANNUEL/UFC-QUE-CHOISIR/ufc/front_end/src/components/SurveyCreator.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\ninterface SurveyQuestion {\n  questionText: string;\n  options?: string[];\n  type: 'radio' | 'text';\n}\n\ninterface SurveyCreatorProps {\n  onAddSurvey: (survey: { title: string; questions: SurveyQuestion[] }) => void;\n}\n\nconst SurveyCreator: React.FC<SurveyCreatorProps> = ({ onAddSurvey }) => {\n  const [surveyTitle, setSurveyTitle] = useState('');\n  const [questions, setQuestions] = useState<SurveyQuestion[]>([{ questionText: '', type: 'radio', options: [''] }]);\n  const [error, setError] = useState<string | null>(null);\n\n  const handleTitleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setSurveyTitle(e.target.value);\n  };\n\n  const handleQuestionChange = (index: number, value: string) => {\n    const newQuestions = [...questions];\n    newQuestions[index].questionText = value;\n    setQuestions(newQuestions);\n  };\n\n  const handleOptionChange = (qIndex: number, oIndex: number, value: string) => {\n    const newQuestions = [...questions];\n    newQuestions[qIndex].options![oIndex] = value;\n    setQuestions(newQuestions);\n  };\n\n  const handleQuestionTypeChange = (index: number, type: 'radio' | 'text') => {\n    const newQuestions = [...questions];\n    newQuestions[index].type = type;\n    if (type === 'text') {\n      delete newQuestions[index].options;\n    } else {\n      newQuestions[index].options = [''];\n    }\n    setQuestions(newQuestions);\n  };\n\n  const addQuestion = () => {\n    setQuestions([...questions, { questionText: '', type: 'radio', options: [''] }]);\n  };\n\n  const addOption = (qIndex: number) => {\n    const newQuestions = [...questions];\n    newQuestions[qIndex].options!.push('');\n    setQuestions(newQuestions);\n  };\n\n  const handleSubmit = async () => {\n    if (!surveyTitle.trim()) {\n      setError('Le titre du sondage ne peut pas être vide.');\n      return;\n    }\n    for (const question of questions) {\n      if (!question.questionText.trim()) {\n        setError('Toutes les questions doivent avoir un texte.');\n        return;\n      }\n      if (question.type === 'radio') {\n        for (const option of question.options!) {\n          if (!option.trim()) {\n            setError('Toutes les options doivent avoir un texte.');\n            return;\n          }\n        }\n      }\n    }\n    setError(null);\n    const survey = { title: surveyTitle, questions };\n    onAddSurvey(survey);\n\n    try {\n      const response = await axios.post('http://localhost:3000/surveys', survey, {\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      });\n      console.log('Survey created:', response.data);\n    } catch (error) {\n      console.error('Error creating survey:', error);\n    }\n  };\n\n  return (\n    <div>\n      <h2>Créer un sondage</h2>\n      {error && <p style={{ color: 'red' }}>{error}</p>}\n      <input type=\"text\" value={surveyTitle} onChange={handleTitleChange} placeholder=\"Titre du sondage\" />\n      {questions.map((question, qIndex) => (\n        <div key={qIndex}>\n          <input\n            type=\"text\"\n            value={question.questionText}\n            onChange={(e) => handleQuestionChange(qIndex, e.target.value)}\n            placeholder={`Question ${qIndex + 1}`}\n          />\n          <label>\n            <input\n              type=\"radio\"\n              checked={question.type === 'radio'}\n              onChange={() => handleQuestionTypeChange(qIndex, 'radio')}\n            />\n            Radio\n          </label>\n          <label>\n            <input\n              type=\"radio\"\n              checked={question.type === 'text'}\n              onChange={() => handleQuestionTypeChange(qIndex, 'text')}\n            />\n            Texte\n          </label>\n          {question.type === 'radio' && question.options!.map((option, oIndex) => (\n            <input\n              key={oIndex}\n              type=\"text\"\n              value={option}\n              onChange={(e) => handleOptionChange(qIndex, oIndex, e.target.value)}\n              placeholder={`Option ${oIndex + 1}`}\n            />\n          ))}\n          {question.type === 'radio' && <button onClick={() => addOption(qIndex)}>Ajouter une option</button>}\n        </div>\n      ))}\n      <button onClick={addQuestion}>Ajouter une question</button>\n      <button onClick={handleSubmit}>Soumettre le sondage</button>\n    </div>\n  );\n};\n\nexport default SurveyCreator;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}