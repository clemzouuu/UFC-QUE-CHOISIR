{"ast":null,"code":"var _jsxFileName = \"/Users/clemzouuu/Desktop/ESGI/ARCHI_1/PROJET_ANNUEL/UFC-QUE-CHOISIR/ufc/front_end/src/components/SurveyResults.tsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SurveyResults = ({\n  survey,\n  responses\n}) => {\n  const countResponses = (qIndex, option) => {\n    return responses.reduce((count, response) => response[qIndex] === option ? count + 1 : count, 0);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: survey.questions.map((question, qIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: question.questionText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: question.options.map((option, oIndex) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [option, \": \", countResponses(qIndex, option)]\n        }, oIndex, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this)]\n    }, qIndex, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_c = SurveyResults;\nexport default SurveyResults;\nvar _c;\n$RefreshReg$(_c, \"SurveyResults\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","SurveyResults","survey","responses","countResponses","qIndex","option","reduce","count","response","children","questions","map","question","questionText","fileName","_jsxFileName","lineNumber","columnNumber","options","oIndex","_c","$RefreshReg$"],"sources":["/Users/clemzouuu/Desktop/ESGI/ARCHI_1/PROJET_ANNUEL/UFC-QUE-CHOISIR/ufc/front_end/src/components/SurveyResults.tsx"],"sourcesContent":["import React from 'react';\n\ninterface SurveyResultsProps {\n  survey: {\n    title: string;\n    questions: { questionText: string; options: string[] }[];\n  };\n  responses: string[][];\n}\n\nconst SurveyResults: React.FC<SurveyResultsProps> = ({ survey, responses }) => {\n  const countResponses = (qIndex: number, option: string) => {\n    return responses.reduce((count, response) => (response[qIndex] === option ? count + 1 : count), 0);\n  };\n\n  return (\n    <div>\n      {survey.questions.map((question, qIndex) => (\n        <div key={qIndex}>\n          <p>{question.questionText}</p>\n          <ul>\n            {question.options.map((option, oIndex) => (\n              <li key={oIndex}>\n                {option}: {countResponses(qIndex, option)}\n              </li>\n            ))}\n          </ul>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default SurveyResults;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAU1B,MAAMC,aAA2C,GAAGA,CAAC;EAAEC,MAAM;EAAEC;AAAU,CAAC,KAAK;EAC7E,MAAMC,cAAc,GAAGA,CAACC,MAAc,EAAEC,MAAc,KAAK;IACzD,OAAOH,SAAS,CAACI,MAAM,CAAC,CAACC,KAAK,EAAEC,QAAQ,KAAMA,QAAQ,CAACJ,MAAM,CAAC,KAAKC,MAAM,GAAGE,KAAK,GAAG,CAAC,GAAGA,KAAM,EAAE,CAAC,CAAC;EACpG,CAAC;EAED,oBACER,OAAA;IAAAU,QAAA,EACGR,MAAM,CAACS,SAAS,CAACC,GAAG,CAAC,CAACC,QAAQ,EAAER,MAAM,kBACrCL,OAAA;MAAAU,QAAA,gBACEV,OAAA;QAAAU,QAAA,EAAIG,QAAQ,CAACC;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC9BlB,OAAA;QAAAU,QAAA,EACGG,QAAQ,CAACM,OAAO,CAACP,GAAG,CAAC,CAACN,MAAM,EAAEc,MAAM,kBACnCpB,OAAA;UAAAU,QAAA,GACGJ,MAAM,EAAC,IAAE,EAACF,cAAc,CAACC,MAAM,EAAEC,MAAM,CAAC;QAAA,GADlCc,MAAM;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEX,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA,GARGb,MAAM;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OASX,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACG,EAAA,GArBIpB,aAA2C;AAuBjD,eAAeA,aAAa;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}