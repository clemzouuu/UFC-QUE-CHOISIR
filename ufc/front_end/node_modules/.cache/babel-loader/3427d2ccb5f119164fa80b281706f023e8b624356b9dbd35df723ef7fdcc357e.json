{"ast":null,"code":"var _jsxFileName = \"/Users/clemzouuu/Desktop/ESGI/ARCHI_1/PROJET_ANNUEL/UFC-QUE-CHOISIR/ufc/front_end/src/components/SurveyResults.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SurveyResults = ({\n  survey,\n  responses\n}) => {\n  _s();\n  const [surveys, setSurveys] = useState([]);\n  useEffect(() => {\n    const fetchSurveys = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        const response = await axios.get('http://localhost:3000/surveys', {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          },\n          withCredentials: true\n        });\n        setSurveys(response.data.surveys);\n      } catch (error) {\n        console.error('Error fetching surveys:', error);\n      }\n    };\n    fetchSurveys();\n  }, []);\n  const getResponseCount = (questionIndex, option) => {\n    return responses.reduce((count, response) => {\n      return count + (response[questionIndex] === option ? 1 : 0);\n    }, 0);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Survey Results: \", survey.title]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), survey.questions.map((question, qIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: question.questionText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), question.type === 'radio' && question.options && question.options.map((option, oIndex) => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [option, \": \", getResponseCount(qIndex, option), \" responses\"]\n      }, oIndex, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this)), question.type === 'text' && responses.map((response, rIndex) => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Response \", rIndex + 1, \": \", response[qIndex]]\n      }, rIndex, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this))]\n    }, qIndex, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(SurveyResults, \"MQRvZjfMbqbx3vRgTHx6s1eVAEA=\");\n_c = SurveyResults;\nexport default SurveyResults;\nvar _c;\n$RefreshReg$(_c, \"SurveyResults\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","SurveyResults","survey","responses","_s","surveys","setSurveys","fetchSurveys","token","localStorage","getItem","response","get","headers","withCredentials","data","error","console","getResponseCount","questionIndex","option","reduce","count","children","title","fileName","_jsxFileName","lineNumber","columnNumber","questions","map","question","qIndex","questionText","type","options","oIndex","rIndex","_c","$RefreshReg$"],"sources":["/Users/clemzouuu/Desktop/ESGI/ARCHI_1/PROJET_ANNUEL/UFC-QUE-CHOISIR/ufc/front_end/src/components/SurveyResults.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useAuth } from './auth/AuthContext';\n\ninterface SurveyQuestion {\n  questionText: string;\n  options?: string[];\n  type: 'radio' | 'text';\n}\n\ninterface Survey {\n  id: number;\n  title: string;\n  questions: SurveyQuestion[];\n}\n\ninterface SurveyResultProps {\n  survey: Survey;\n  responses: string[][];\n}\n\nconst SurveyResults: React.FC<SurveyResultProps> = ({ survey, responses }) => {\n  const [surveys, setSurveys] = useState<Survey[]>([]);\n\n  useEffect(() => {\n    const fetchSurveys = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        const response = await axios.get('http://localhost:3000/surveys', {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          },\n          withCredentials: true\n        });\n        setSurveys(response.data.surveys);\n      } catch (error) {\n        console.error('Error fetching surveys:', error);\n      }\n    };\n\n    fetchSurveys();\n  }, []);\n\n  const getResponseCount = (questionIndex: number, option: string) => {\n    return responses.reduce((count, response) => {\n      return count + (response[questionIndex] === option ? 1 : 0);\n    }, 0);\n  };\n\n  return (\n    <div>\n      <h2>Survey Results: {survey.title}</h2>\n      {survey.questions.map((question, qIndex) => (\n        <div key={qIndex}>\n          <p>{question.questionText}</p>\n          {question.type === 'radio' && question.options && question.options.map((option, oIndex) => (\n            <p key={oIndex}>{option}: {getResponseCount(qIndex, option)} responses</p>\n          ))}\n          {question.type === 'text' && responses.map((response, rIndex) => (\n            <p key={rIndex}>Response {rIndex + 1}: {response[qIndex]}</p>\n          ))}\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default SurveyResults;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}