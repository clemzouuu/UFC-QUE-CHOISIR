{"ast":null,"code":"var _jsxFileName = \"/Users/clemzouuu/Desktop/ESGI/ARCHI_1/PROJET_ANNUEL/UFC-QUE-CHOISIR/ufc/front_end/src/components/SurveyResponse.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useAuth } from './auth/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SurveyResponse = () => {\n  _s();\n  var _surveys$find;\n  const auth = useAuth();\n  const [surveys, setSurveys] = useState([]);\n  const [selectedSurvey, setSelectedSurvey] = useState(null);\n  const [responses, setResponses] = useState([]);\n  useEffect(() => {\n    const fetchSurveys = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        const response = await axios.get('http://localhost:3000/surveys', {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          },\n          withCredentials: true\n        });\n        setSurveys(response.data.surveys);\n      } catch (error) {\n        console.error('Error fetching surveys:', error);\n      }\n    };\n    fetchSurveys();\n  }, []);\n  const handleResponseSubmit = async surveyId => {\n    try {\n      const token = localStorage.getItem('token');\n      await axios.post(`http://localhost:3000/surveys/${surveyId}/responses`, {\n        responses\n      }, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        },\n        withCredentials: true\n      });\n      alert('Responses submitted successfully');\n    } catch (error) {\n      console.error('Error submitting responses:', error);\n    }\n  };\n  if (!auth.user) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Please log in to respond to surveys.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Respond to Survey\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: e => setSelectedSurvey(parseInt(e.target.value)),\n      value: selectedSurvey || '',\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        disabled: true,\n        children: \"Select a survey\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), surveys.map(survey => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: survey.id,\n        children: survey.title\n      }, survey.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), selectedSurvey !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [(_surveys$find = surveys.find(survey => survey.id === selectedSurvey)) === null || _surveys$find === void 0 ? void 0 : _surveys$find.questions.map((question, qIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: question.questionText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 15\n        }, this), question.type === 'radio' && question.options && question.options.map((option, oIndex) => /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: `question-${qIndex}`,\n            value: option,\n            onChange: e => {\n              const newResponses = [...responses];\n              newResponses[qIndex] = e.target.value;\n              setResponses(newResponses);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 19\n          }, this), option]\n        }, oIndex, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 17\n        }, this)), question.type === 'text' && /*#__PURE__*/_jsxDEV(\"textarea\", {\n          onChange: e => {\n            const newResponses = [...responses];\n            newResponses[qIndex] = e.target.value;\n            setResponses(newResponses);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 17\n        }, this)]\n      }, qIndex, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleResponseSubmit(selectedSurvey),\n        children: \"Submit Responses\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(SurveyResponse, \"THrcETuDR0WUgd0LTxvV6OlyToQ=\", false, function () {\n  return [useAuth];\n});\n_c = SurveyResponse;\nexport default SurveyResponse;\nvar _c;\n$RefreshReg$(_c, \"SurveyResponse\");","map":{"version":3,"names":["React","useState","useEffect","axios","useAuth","jsxDEV","_jsxDEV","SurveyResponse","_s","_surveys$find","auth","surveys","setSurveys","selectedSurvey","setSelectedSurvey","responses","setResponses","fetchSurveys","token","localStorage","getItem","response","get","headers","withCredentials","data","error","console","handleResponseSubmit","surveyId","post","alert","user","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","parseInt","target","value","disabled","map","survey","id","title","find","questions","question","qIndex","questionText","type","options","option","oIndex","name","newResponses","onClick","_c","$RefreshReg$"],"sources":["/Users/clemzouuu/Desktop/ESGI/ARCHI_1/PROJET_ANNUEL/UFC-QUE-CHOISIR/ufc/front_end/src/components/SurveyResponse.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useAuth } from './auth/AuthContext';\n\ninterface SurveyQuestion {\n  questionText: string;\n  options?: string[];\n  type: 'radio' | 'text';\n}\n\ninterface Survey {\n  id: number;\n  title: string;\n  questions: SurveyQuestion[];\n}\n\nconst SurveyResponse: React.FC = () => {\n  const auth = useAuth();\n  const [surveys, setSurveys] = useState<Survey[]>([]);\n  const [selectedSurvey, setSelectedSurvey] = useState<number | null>(null);\n  const [responses, setResponses] = useState<string[]>([]);\n\n  useEffect(() => {\n    const fetchSurveys = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        const response = await axios.get('http://localhost:3000/surveys', {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          },\n          withCredentials: true\n        });\n        setSurveys(response.data.surveys);\n      } catch (error) {\n        console.error('Error fetching surveys:', error);\n      }\n    };\n\n    fetchSurveys();\n  }, []);\n\n  const handleResponseSubmit = async (surveyId: number) => {\n    try {\n      const token = localStorage.getItem('token');\n      await axios.post(`http://localhost:3000/surveys/${surveyId}/responses`, { responses }, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        },\n        withCredentials: true\n      });\n      alert('Responses submitted successfully');\n    } catch (error) {\n      console.error('Error submitting responses:', error);\n    }\n  };\n\n  if (!auth.user) {\n    return <p>Please log in to respond to surveys.</p>;\n  }\n\n  return (\n    <div>\n      <h2>Respond to Survey</h2>\n      <select onChange={(e) => setSelectedSurvey(parseInt(e.target.value))} value={selectedSurvey || ''}>\n        <option value=\"\" disabled>Select a survey</option>\n        {surveys.map((survey) => (\n          <option key={survey.id} value={survey.id}>{survey.title}</option>\n        ))}\n      </select>\n\n      {selectedSurvey !== null && (\n        <div>\n          {surveys.find((survey) => survey.id === selectedSurvey)?.questions.map((question, qIndex) => (\n            <div key={qIndex}>\n              <p>{question.questionText}</p>\n              {question.type === 'radio' && question.options && question.options.map((option, oIndex) => (\n                <label key={oIndex}>\n                  <input\n                    type=\"radio\"\n                    name={`question-${qIndex}`}\n                    value={option}\n                    onChange={(e) => {\n                      const newResponses = [...responses];\n                      newResponses[qIndex] = e.target.value;\n                      setResponses(newResponses);\n                    }}\n                  />\n                  {option}\n                </label>\n              ))}\n              {question.type === 'text' && (\n                <textarea\n                  onChange={(e) => {\n                    const newResponses = [...responses];\n                    newResponses[qIndex] = e.target.value;\n                    setResponses(newResponses);\n                  }}\n                />\n              )}\n            </div>\n          ))}\n          <button onClick={() => handleResponseSubmit(selectedSurvey)}>Submit Responses</button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default SurveyResponse;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}